/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import Datos.Conexion;
import Tipografia.Fuente;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Los Pibes
 */
public class visualizarInfoPeliculas extends javax.swing.JFrame {

    /**
     * Creates new form registrarInfoPeliculas
     */
    Fuente tipoFuente;

    final Calendar calendar = Calendar.getInstance();
    final java.util.Date date = calendar.getTime();
    String fecha = new SimpleDateFormat("yyyyMMdd-hh.mm.ss").format(date);

    public visualizarInfoPeliculas() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        visualizarActores(Paneles.panelPeliculas.id);
        visualizarHorarios(Paneles.panelPeliculas.id);
        visualizarSalas(Paneles.panelPeliculas.id);

        tipoFuente = new Fuente();
        listaActores.setFont(tipoFuente.fuente(tipoFuente.LUSI, 2, 16));
        listaHorarios.setFont(tipoFuente.fuente(tipoFuente.LUSI, 2, 16));
        listaSalas.setFont(tipoFuente.fuente(tipoFuente.LUSI, 2, 16));
        lbPelicula.setFont(tipoFuente.fuente(tipoFuente.LUSI, 2, 30));

        listaActores.setModel(modelActores);
        listaHorarios.setModel(modelHorarios);
        listaSalas.setModel(modelSalas);
        listaActores.setEnabled(false);
        listaHorarios.setEnabled(false);
        listaSalas.setEnabled(false);

        lbPelicula.setText(Paneles.panelPeliculas.titulo);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/cinematixLogo.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaActores = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaHorarios = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaSalas = new javax.swing.JList<>();
        btnSalir = new javax.swing.JLabel();
        lbPelicula = new javax.swing.JLabel();
        lbFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaActores.setOpaque(false);
        jScrollPane1.setViewportView(listaActores);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 140, 250, 170));

        jScrollPane3.setViewportView(listaHorarios);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 140, 250, 170));

        jScrollPane5.setViewportView(listaSalas);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 140, 250, 170));

        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 28, 28));

        lbPelicula.setForeground(new java.awt.Color(255, 255, 255));
        lbPelicula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPelicula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/iconoPeliculas.png"))); // NOI18N
        getContentPane().add(lbPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 13, 505, 40));

        lbFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/verInfoPeliculas.png"))); // NOI18N
        lbFondo.setPreferredSize(new java.awt.Dimension(900, 350));
        getContentPane().add(lbFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    Conexion cn = new Conexion();
    Connection cc = cn.GetConexion();

    ArrayList arregloActores = new ArrayList();
    public ArrayList arregloActoresElegidos = new ArrayList();
    ArrayList arregloHorarios = new ArrayList();
    public ArrayList arregloHorariosElegidos = new ArrayList();
    ArrayList arregloSalas = new ArrayList();
    public ArrayList arregloSalasElegidas = new ArrayList();
    DefaultListModel modelActores = new DefaultListModel();
    DefaultListModel modelActoresAgregados = new DefaultListModel();
    DefaultListModel modelHorarios = new DefaultListModel();
    DefaultListModel modelHorariosElegidos = new DefaultListModel();
    DefaultListModel modelSalas = new DefaultListModel();
    DefaultListModel modelSalasElegidas = new DefaultListModel();

    void visualizarActores(String pelicula) {
        String sql = "SELECT A.Nombre FROM peliculasactores AS PA\n"
                + "INNER JOIN actores AS A ON PA.IDActor = A.IDActor\n"
                + "WHERE PA.IdPelicula = '" + pelicula + "'";

        try {
            Statement st = cc.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                arregloActores.add(rs.getString("A.Nombre"));
                System.out.println(arregloActores);
            }
        } catch (Exception e) {
            try {
                log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                myLog.logger.setLevel(Level.SEVERE);
                myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
            } catch (IOException ex) {
                Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        System.out.println(arregloActores);
        for (int i = 0; i < arregloActores.size(); i++) {
            modelActores.addElement(arregloActores.get(i));
        }
    }

    void visualizarHorarios(String pelicula) {
        String sql = "SELECT H.Hora FROM peliculashorarios AS PH\n"
                + "INNER JOIN horarios AS H ON PH.IDHorario = H.IDHorario\n"
                + "WHERE PH.IdPelicula = '" + pelicula + "'";

        try {
            Statement st = cc.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                arregloHorarios.add(rs.getString("H.Hora"));
                System.out.println(arregloHorarios);
            }
        } catch (Exception e) {
            try {
                log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                myLog.logger.setLevel(Level.SEVERE);
                myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
            } catch (IOException ex) {
                Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        System.out.println(arregloHorarios);
        for (int i = 0; i < arregloHorarios.size(); i++) {
            modelHorarios.addElement(arregloHorarios.get(i));
        }
    }

    void visualizarSalas(String pelicula) {
        String sql = "SELECT S.Sala FROM peliculassalas AS PS\n"
                + "INNER JOIN salas AS S ON PS.IDSalas = S.IDSalas\n"
                + "WHERE PS.IdPelicula = '" + pelicula + "'";

        try {
            Statement st = cc.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                arregloSalas.add(rs.getString("S.Sala"));
                System.out.println(arregloSalas);
            }
        } catch (Exception e) {
            try {
                log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                myLog.logger.setLevel(Level.SEVERE);
                myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
            } catch (IOException ex) {
                Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        System.out.println(arregloSalas);
        for (int i = 0; i < arregloSalas.size(); i++) {
            modelSalas.addElement(arregloSalas.get(i));
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {
            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (Exception e) {
                try {
                    log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                    myLog.logger.setLevel(Level.SEVERE);
                    myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
                } catch (IOException ex) {
                    Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        this.dispose();
        Paneles.panelPeliculas.pantallaVerInfo = false;
    }//GEN-LAST:event_btnSalirMouseClicked

    public ArrayList arregloIDActores = new ArrayList();

    void obtenerIDActores() {
        for (int i = 0; i < arregloActoresElegidos.size(); i++) {
            try {
                String sql = "SELECT IDActor FROM actores WHERE Nombre = '" + arregloActoresElegidos.get(i) + "'";

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    arregloIDActores.add(rs.getString("IDActor"));
                    System.out.println(arregloIDActores);
                }
            } catch (Exception e) {
            }
        }
    }

    public ArrayList arregloIDHorarios = new ArrayList();

    void obtenerIDHorarios() {
        for (int i = 0; i < arregloHorariosElegidos.size(); i++) {
            try {
                String sql = "SELECT IDHorario FROM horarios WHERE Hora = '" + arregloHorariosElegidos.get(i) + "'";

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    arregloIDHorarios.add(rs.getString("IDHorario"));
                    System.out.println(arregloIDHorarios);
                }
            } catch (Exception e) {
                try {
                    log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                    myLog.logger.setLevel(Level.SEVERE);
                    myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
                } catch (IOException ex) {
                    Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public ArrayList arregloIDSalas = new ArrayList();

    void obtenerIDSalas() {
        for (int i = 0; i < arregloSalasElegidas.size(); i++) {
            try {
                String sql = "SELECT IDSalas FROM salas WHERE Sala = '" + arregloSalasElegidas.get(i) + "'";

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    arregloIDSalas.add(rs.getString("IDSalas"));
                    System.out.println(arregloIDSalas);
                }
            } catch (Exception e) {
                try {
                    log myLog = new log("Source Packages\\Logs\\visualizarInfoPeliculas " + fecha + ".txt");
                    myLog.logger.setLevel(Level.SEVERE);
                    myLog.logger.severe(e.getMessage() + " La causa fue: " + e.getCause());
                } catch (IOException ex) {
                    Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(visualizarInfoPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new visualizarInfoPeliculas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbFondo;
    public static javax.swing.JLabel lbPelicula;
    private javax.swing.JList<String> listaActores;
    private javax.swing.JList<String> listaHorarios;
    private javax.swing.JList<String> listaSalas;
    // End of variables declaration//GEN-END:variables
}
