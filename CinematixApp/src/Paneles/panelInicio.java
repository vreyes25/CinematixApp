/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneles;

import JFrames.RegistroAdministradores;
import JFrames.RegistroDirectores;
import JFrames.RegistroGeneros;
import JFrames.RegistroHorarios;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Victor Reyes
 */
public class panelInicio extends javax.swing.JPanel {

    /**
     * Creates new form panelInicio
     */
    public panelInicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        btnAdminUsuarios = new javax.swing.JButton();
        btnAdminGeneros = new javax.swing.JButton();
        btnAdminDirectores = new javax.swing.JButton();
        btnAdminHorarios = new javax.swing.JButton();

        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/MenúLT.png"))); // NOI18N
        add(lbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        btnAdminUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónUsuarios.png"))); // NOI18N
        btnAdminUsuarios.setBorder(null);
        btnAdminUsuarios.setBorderPainted(false);
        btnAdminUsuarios.setContentAreaFilled(false);
        btnAdminUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdminUsuarios.setFocusPainted(false);
        btnAdminUsuarios.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónUsuarios2.png"))); // NOI18N
        btnAdminUsuarios.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónUsuarios2.png"))); // NOI18N
        btnAdminUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdminUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdminUsuariosMouseExited(evt);
            }
        });
        btnAdminUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminUsuariosActionPerformed(evt);
            }
        });
        add(btnAdminUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 145, -1, -1));

        btnAdminGeneros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónGéneros.png"))); // NOI18N
        btnAdminGeneros.setBorder(null);
        btnAdminGeneros.setBorderPainted(false);
        btnAdminGeneros.setContentAreaFilled(false);
        btnAdminGeneros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdminGeneros.setFocusPainted(false);
        btnAdminGeneros.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónGéneros2.png"))); // NOI18N
        btnAdminGeneros.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónGéneros2.png"))); // NOI18N
        btnAdminGeneros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdminGenerosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdminGenerosMouseExited(evt);
            }
        });
        btnAdminGeneros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminGenerosActionPerformed(evt);
            }
        });
        add(btnAdminGeneros, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 150, -1, -1));

        btnAdminDirectores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónDirectores.png"))); // NOI18N
        btnAdminDirectores.setBorder(null);
        btnAdminDirectores.setBorderPainted(false);
        btnAdminDirectores.setContentAreaFilled(false);
        btnAdminDirectores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdminDirectores.setFocusPainted(false);
        btnAdminDirectores.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónDirectores2.png"))); // NOI18N
        btnAdminDirectores.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónDirectores2.png"))); // NOI18N
        btnAdminDirectores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdminDirectoresMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdminDirectoresMouseExited(evt);
            }
        });
        btnAdminDirectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminDirectoresActionPerformed(evt);
            }
        });
        add(btnAdminDirectores, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 395, -1, -1));

        btnAdminHorarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónHorarios.png"))); // NOI18N
        btnAdminHorarios.setBorder(null);
        btnAdminHorarios.setBorderPainted(false);
        btnAdminHorarios.setContentAreaFilled(false);
        btnAdminHorarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdminHorarios.setFocusPainted(false);
        btnAdminHorarios.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónHorarios2.png"))); // NOI18N
        btnAdminHorarios.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotónHorarios2.png"))); // NOI18N
        btnAdminHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdminHorariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdminHorariosMouseExited(evt);
            }
        });
        btnAdminHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminHorariosActionPerformed(evt);
            }
        });
        add(btnAdminHorarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 407, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminUsuariosMouseEntered
        btnAdminUsuarios.setBounds(50, 135, 329, 208);
    }//GEN-LAST:event_btnAdminUsuariosMouseEntered

    private void btnAdminUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminUsuariosMouseExited
        btnAdminUsuarios.setBounds(50, 145, 329, 208);
    }//GEN-LAST:event_btnAdminUsuariosMouseExited

    private void btnAdminGenerosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminGenerosMouseEntered
        btnAdminGeneros.setBounds(415, 140, 329, 208);
    }//GEN-LAST:event_btnAdminGenerosMouseEntered

    private void btnAdminGenerosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminGenerosMouseExited
        btnAdminGeneros.setBounds(415, 150, 329, 208);
    }//GEN-LAST:event_btnAdminGenerosMouseExited

    private void btnAdminDirectoresMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminDirectoresMouseEntered
        btnAdminDirectores.setBounds(50, 385, 329, 218);
    }//GEN-LAST:event_btnAdminDirectoresMouseEntered

    private void btnAdminDirectoresMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminDirectoresMouseExited
        btnAdminDirectores.setBounds(50, 395, 329, 218);
    }//GEN-LAST:event_btnAdminDirectoresMouseExited

    private void btnAdminHorariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminHorariosMouseEntered
        btnAdminHorarios.setBounds(415, 397, 329, 208);
    }//GEN-LAST:event_btnAdminHorariosMouseEntered

    private void btnAdminHorariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminHorariosMouseExited
        btnAdminHorarios.setBounds(415, 407, 329, 208);
    }//GEN-LAST:event_btnAdminHorariosMouseExited

    public static boolean pantallaUsuarios = false;
    public static boolean pantallaGeneros = false;
    public static boolean pantallaDirectores = false;
    public static boolean pantallaHorarios = false;

    RegistroAdministradores ra = new RegistroAdministradores();
    RegistroGeneros rg = new RegistroGeneros();
    RegistroDirectores rd = new RegistroDirectores();
    RegistroHorarios rh = new RegistroHorarios();

    private void btnAdminUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminUsuariosActionPerformed
        if (pantallaGeneros == true) {
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar géneros está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rg.dispose();
                ra.setVisible(true);
                pantallaUsuarios = true;
                pantallaGeneros = false;
            }
        } else if (pantallaDirectores == true) {
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar directores está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rd.dispose();
                ra.setVisible(true);
                pantallaUsuarios = true;
                pantallaDirectores = false;
            }
        } else if (pantallaHorarios == true) {
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar horarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rh.dispose();
                ra.setVisible(true);
                pantallaUsuarios = true;
                pantallaHorarios = false;
            }
        } else {
            if (pantallaUsuarios == false) {
                ra.setVisible(true);
                pantallaUsuarios = true;
            } else if (pantallaUsuarios == true) {
                ImageIcon jPanelIcono = new ImageIcon("src/iconos/iconoAdvertencia.png");
                JOptionPane.showMessageDialog(null, "Esta ventana se está ejecutando actualmente", "Advertencia", JOptionPane.PLAIN_MESSAGE, jPanelIcono);
            }
        }
    }//GEN-LAST:event_btnAdminUsuariosActionPerformed

    private void btnAdminGenerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminGenerosActionPerformed
        if (pantallaUsuarios == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar usuarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                ra.dispose();
                rg.setVisible(true);
                pantallaGeneros = true;
                pantallaUsuarios = false;
            }
        } else if (pantallaDirectores == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar directores está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rd.dispose();
                rg.setVisible(true);
                pantallaGeneros = true;
                pantallaDirectores = false;
            }
        } else if (pantallaHorarios == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar horarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rh.dispose();
                rg.setVisible(true);
                pantallaGeneros = true;
                pantallaHorarios = false;
            }
        } else {
            if(pantallaGeneros == false){
                rg.setVisible(true);
                pantallaGeneros = true;
            } else if (pantallaGeneros == true){
                ImageIcon jPanelIcono = new ImageIcon("src/iconos/iconoAdvertencia.png");
                JOptionPane.showMessageDialog(null, "Esta ventana se está ejecutando actualmente", "Advertencia", JOptionPane.PLAIN_MESSAGE, jPanelIcono);
            }
        }
    }//GEN-LAST:event_btnAdminGenerosActionPerformed

    private void btnAdminDirectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminDirectoresActionPerformed
        if (pantallaUsuarios == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar usuarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                ra.dispose();
                rd.setVisible(true);
                pantallaDirectores = true;
                pantallaUsuarios = false;
            }
        } else if (pantallaGeneros == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar géneros está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rg.dispose();
                rd.setVisible(true);
                pantallaDirectores = true;
                pantallaGeneros = false;
            }
        } else if (pantallaHorarios == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar horarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rh.dispose();
                rd.setVisible(true);
                pantallaDirectores = true;
                pantallaHorarios = false;
            }
        } else {
            if(pantallaDirectores == false){
                rd.setVisible(true);
                pantallaDirectores = true;
            } else if (pantallaDirectores == true){
                ImageIcon jPanelIcono = new ImageIcon("src/iconos/iconoAdvertencia.png");
                JOptionPane.showMessageDialog(null, "Esta ventana se está ejecutando actualmente", "Advertencia", JOptionPane.PLAIN_MESSAGE, jPanelIcono);
            }
        }
    }//GEN-LAST:event_btnAdminDirectoresActionPerformed

    private void btnAdminHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminHorariosActionPerformed
        if (pantallaUsuarios == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar usuarios está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                ra.dispose();
                rh.setVisible(true);
                pantallaHorarios = true;
                pantallaUsuarios = false;
            }
        } else if (pantallaGeneros == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar géneros está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rg.dispose();
                rh.setVisible(true);
                pantallaHorarios = true;
                pantallaGeneros = false;
            }
        } else if (pantallaDirectores == true){
            ImageIcon jPanelIcon = new ImageIcon("src/iconos/iconoAdvertencia.png");
            int decision = JOptionPane.showConfirmDialog(null, "La ventana de administrar directores está abierta\n "
                    + "¿Desea cerrarla antes?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                    jPanelIcon);
            if (decision == 0) {
                rd.dispose();
                rh.setVisible(true);
                pantallaHorarios = true;
                pantallaDirectores = false;
            }
        } else {
            if(pantallaHorarios == false){
                rh.setVisible(true);
                pantallaHorarios = true;
            } else if (pantallaHorarios == true){
                ImageIcon jPanelIcono = new ImageIcon("src/iconos/iconoAdvertencia.png");
                JOptionPane.showMessageDialog(null, "Esta ventana se está ejecutando actualmente", "Advertencia", JOptionPane.PLAIN_MESSAGE, jPanelIcono);
            }
        }
    }//GEN-LAST:event_btnAdminHorariosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminDirectores;
    private javax.swing.JButton btnAdminGeneros;
    private javax.swing.JButton btnAdminHorarios;
    private javax.swing.JButton btnAdminUsuarios;
    private javax.swing.JLabel lbTitulo;
    // End of variables declaration//GEN-END:variables
}
